# infrastructure/config/loader.py
from typing import Dict, Any, Optional
import yaml
import json
from pathlib import Path
from .environment import EnvironmentManager

class ConfigurationLoader:
    def __init__(self, env_manager: EnvironmentManager):
        self.env_manager = env_manager

    def load_yaml(self, filename: str) -> Dict[str, Any]:
        config_file = self.env_manager.get_config_file(filename)
        if not config_file:
            raise FileNotFoundError(f"Configuration file {filename} not found")

        with open(config_file) as f:
            return yaml.safe_load(f)

    def load_json(self, filename: str) -> Dict[str, Any]:
        config_file = self.env_manager.get_config_file(filename)
        if not config_file:
            raise FileNotFoundError(f"Configuration file {filename} not found")

        with open(config_file) as f:
            return json.load(f)

    def save_yaml(self, data: Dict[str, Any], filename: str) -> None:
        config_file = Path(self.env_manager._config_path) / filename
        with open(config_file, 'w') as f:
            yaml.dump(data, f)

    def save_json(self, data: Dict[str, Any], filename: str) -> None:
        config_file = Path(self.env_manager._config_path) / filename
        with open(config_file, 'w') as f:
            json.dump(data, f, indent=2)